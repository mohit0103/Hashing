#include <iostream>
using namespace std;

struct node{
    int value;
    node *next;
}*hashtable[10];

class hashing{
    public:
    hashing()
{

    for (int i = 0; i<10; i++){
        hashtable[i] = NULL;
    }
}
int hashfunction(int value){
    return (value %10);
}
node *create_node(int x)
{
    node *temp = new node;
    temp ->next = NULL;
    temp ->value = x;
    return temp;
}
void insert(int value){
    int hash_value = hashfunction(value);
    node *temp = new node;
    node *head = new node;
    head = create_node(value);
    temp = hashtable[hash_value];
    if (temp == NULL){
        hashtable[hash_value]=head;      
    }
    else{
        while (temp->next != NULL){
            temp = temp ->next;
        }
        temp ->next =head;
    }
}
void display()
{
 	 for(int i=0 ; i< 10; i++)
{
  	 	node * temp=new node;
   		temp=hashtable[i];
   		cout<<"a["<<i<<"] : ";
   		while(temp !=NULL)
{
    			cout<<" ->"<<temp->value;
    			temp=temp->next;
  		 }
   		cout<<"\n";
}
 }
};
int main(){
    int ch;
    int data;
    hashing h;

    cout<<"enter data";
    cin>>data;
    h.insert(data);
    h.display();

    do{
        cout<<"1. enter data, 2.display 3.exit";
        cin>>ch;
        switch(ch){
            case 1: cout<<"enter data";
                    cin>>data;
                    h.insert(data);
                    break;
            case 2 : h.display();
                    break;        
        }

    }while(ch != 3);

    return 0;
}
